# -*- coding: utf-8 -*-
# @Author: LC
# @Date:   2016-07-23 22:49:04
# @Last modified by:   LC
# @Last Modified time: 2017-03-23 20:31:53
# @Email: liangchaowu5@gmail.com


# #########################################################################
# Function: Change mac address temporally through built-in command ifconfig
# currently only work for ubuntu and centos
# #########################################################################

import random
import re
import subprocess
import os
import sys

# mac address of some manufacturer
manufacturer_mac_address = [
    [0xE0, 0x43, 0xDB],
    [0x24, 0x05, 0xF5],
    [0x2C, 0x30, 0x33],
    [0x3C, 0xD9, 0x2B],
    [0x9C, 0x8E, 0x99],
    [0xB4, 0x99, 0xBA],
    [0x1C, 0xC1, 0xDE],
    [0x3C, 0x35, 0x56],
    [0x00, 0x50, 0xBA],
    [0x00, 0x17, 0x9A],
    [0x1C, 0xBD, 0xB9],
    [0x90, 0x94, 0xE4],
    [0x28, 0x10, 0x7B],
    [0x1C, 0x7E, 0xE5],
    [0xC4, 0xA8, 0x1D],
    [0x18, 0x62, 0x2C],
    [0x7C, 0x03, 0xD8],
    [0xE8, 0xF1, 0xB0],
    [0x00, 0xF8, 0x71],
    [0x20, 0xBB, 0x76],
    [0x2C, 0x22, 0x8B],
    [0x34, 0x8A, 0xAE],
    [0xBC, 0xEC, 0x23],
    [0x8C, 0xE7, 0x48],
    [0xAC, 0x06, 0xC7],
    [0xCC, 0x46, 0xD6],
    [0x48, 0xAD, 0x08],
    [0x2C, 0xAB, 0x00],
    [0x00, 0xE0, 0xFC],
    [0x24, 0xDF, 0x6A],
    [0x00, 0x9A, 0xCD],
    [0x00, 0xCD, 0xFE],
    [0x38, 0xF2, 0x3E],
    [0x58, 0xAC, 0x78],
    [0x90, 0x7F, 0x61],
    [0x28, 0xBC, 0x18],
    [0x80, 0x7A, 0xBF],
    [0x40, 0x9F, 0x87],
    [0x3C, 0x5A, 0xB4],
    [0x00, 0x1A, 0x11],
    [0xD8, 0x3C, 0x69],
    [0x74, 0xAC, 0x5F],
    [0x18, 0xAF, 0x61],
    [0xBC, 0x83, 0xA7],
    [0x00, 0x03, 0x47],
    [0x00, 0x11, 0x75],
    [0x00, 0x13, 0xE8],
    [0x00, 0x13, 0x02],
    [0xE4, 0xF8, 0x9C],
    [0xA4, 0x02, 0xB9],
    [0x4C, 0x34, 0x88],
    [0x00, 0x0D, 0x0B],
    [0x00, 0x07, 0x40],
    [0x00, 0x24, 0xA5],
    [0xDC, 0xFB, 0x02],
    [0xF4, 0xCE, 0x46],
    [0x00, 0x1C, 0xC4],
    [0x00, 0x25, 0xB3],
    [0x00, 0x18, 0x71],
    [0x00, 0x0B, 0xCD],
    [0x00, 0x0E, 0x7F],
    [0x00, 0x0F, 0x20],
    [0x00, 0x11, 0x0A],
    [0x00, 0x13, 0x21],
    [0x00, 0x16, 0x35],
    [0x00, 0x17, 0xA4],
    [0x00, 0x08, 0x02],
    [0x90, 0xE7, 0xC4],
    [0x74, 0xA7, 0x8E],
    [0xD8, 0x60, 0xB0],
    [0x80, 0x38, 0xBC],
    [0xD4, 0x40, 0xF0],
    [0x64, 0xA6, 0x51],
    [0xE8, 0xCD, 0x2D],
    [0xAC, 0xE2, 0x15],
    [0xEC, 0x23, 0x3D],
    [0x78, 0xF5, 0xFD],
    [0x80, 0xB6, 0x86],
    [0x10, 0xC6, 0x1F],
    [0x88, 0x53, 0xD4],
    [0x0C, 0x37, 0xDC],
    [0xBC, 0x76, 0x70],
    [0x24, 0xDB, 0xAC],
    [0xBC, 0x3A, 0xEA],
    [0xE8, 0xBB, 0xA8],
    [0x00, 0x21, 0xE8],
    [0x00, 0x60, 0x57],
    [0x00, 0x07, 0xD8],
    [0x00, 0x12, 0xF2],
    [0x00, 0x1B, 0xED],
    [0x00, 0x24, 0x38],
    [0x84, 0x74, 0x2A],
    [0x68, 0x1A, 0xB2],
    [0xE0, 0x05, 0xC5],
    [0xA0, 0xF3, 0xC1],
    [0x8C, 0x21, 0x0A],
    [0xEC, 0x17, 0x2F],
    [0xEC, 0x88, 0x8F],
    [0x14, 0xCF, 0x92],
    [0x64, 0x56, 0x01],
    [0x14, 0xCC, 0x20],
    [0xBC, 0x46, 0x99],
    [0x0C, 0x45, 0xBA],
    [0x84, 0x77, 0x78],
    [0x04, 0x53, 0xD5],
    [0xCC, 0x44, 0x63],
    [0x6C, 0x72, 0xE7],
    [0xCC, 0xA2, 0x23],
    [0xE8, 0x08, 0x8B],
    [0x60, 0xE7, 0x01],
    [0x00, 0x08, 0x83],
    [0xC4, 0x34, 0x6B],
    [0x8C, 0xDC, 0xD4],
    [0x34, 0x64, 0xA9],
    [0xD4, 0xC9, 0xEF],
    [0xA4, 0x5D, 0x36],
    [0xA0, 0xD3, 0xC1],
    [0x40, 0xA8, 0xF0],
    [0x6C, 0x3B, 0xE5],
    [0x08, 0x2E, 0x5F],
    [0x28, 0x92, 0x4A],
    [0x10, 0x60, 0x4B],
    [0x30, 0x8D, 0x99],
    [0x00, 0x30, 0xC1],
    [0xFC, 0x3F, 0xDB],
    [0x4C, 0xA1, 0x61],
    [0x7C, 0x61, 0x93],
    [0x00, 0x12, 0x17],
    [0x00, 0x0C, 0x41],
    [0x00, 0x0F, 0x66],
    [0x44, 0xE0, 0x8E],
    [0x18, 0x59, 0x33],
    [0xE4, 0x48, 0xC7],
    [0x24, 0x76, 0x7D],
    [0x2C, 0xAB, 0xA4],
    [0x00, 0x02, 0xC7],
    [0x04, 0x76, 0x6E],
    [0x00, 0x6B, 0x8E],
    [0xAC, 0x85, 0x3D],
    [0x74, 0x88, 0x2A],
    [0x78, 0xD7, 0x52],
    [0xE0, 0x24, 0x7F],
    [0x00, 0x46, 0x4B],
    [0x70, 0x7B, 0xE8],
    [0x54, 0x89, 0x98],
    [0x08, 0x19, 0xA6],
    [0x3C, 0xF8, 0x08],
    [0xB4, 0x15, 0x13],
    [0x28, 0x31, 0x52],
    [0xDC, 0xD2, 0xFC],
    [0xF8, 0xA4, 0x5F],
    [0x8C, 0xBE, 0xBE],
    [0x64, 0x09, 0x80],
    [0x98, 0xFA, 0xE3],
    [0x18, 0x59, 0x36],
    [0x9C, 0x99, 0xA0],
    [0x00, 0x03, 0xDD],
    [0x00, 0x10, 0x7B],
    [0x00, 0x90, 0x6D],
    [0x00, 0x90, 0xBF],
    [0x00, 0x50, 0x80],
    [0x00, 0xE0, 0x18],
    [0x00, 0x0C, 0x6E],
    [0x00, 0x1B, 0xFC],
    [0x00, 0x1E, 0x8C],
    [0x00, 0x15, 0xF2],
    [0x00, 0x23, 0x54],
    [0x00, 0x1F, 0xC6],
    [0x60, 0x18, 0x2E],
    [0xF4, 0xCF, 0xE2],
    [0x50, 0x1C, 0xBF],
    [0x28, 0x5F, 0xDB],
    [0x40, 0x4D, 0x8E],
    [0x78, 0x1D, 0xBA],
    [0x00, 0x1E, 0x10],
    [0xB0, 0xAD, 0xAA],
    [0x10, 0xCD, 0xAE],
    [0x50, 0xCD, 0x22],
    [0xFC, 0xA8, 0x41],
    [0x3C, 0xB1, 0x5B],
    [0xC8, 0xF4, 0x06],
    [0x2C, 0xF4, 0xC5],
    [0x70, 0x38, 0xEE],
    [0x88, 0xF0, 0x31],
    [0x50, 0x87, 0x89],
    [0x38, 0x1C, 0x1A],
    [0xF4, 0x0F, 0x1B],
    [0xBC, 0x67, 0x1C],
    [0xA0, 0xEC, 0xF9],
    [0xD4, 0x6D, 0x50],
    [0x1C, 0xE8, 0x5D],
    [0xC4, 0x72, 0x95],
    [0xA0, 0x55, 0x4F],
    [0x84, 0xB8, 0x02],
    [0xBC, 0xC4, 0x93],
    [0x00, 0x19, 0x47],
    [0x00, 0x22, 0xCE],
    [0xF0, 0x29, 0x29],
    [0xEC, 0xE1, 0xA9],
    [0x7C, 0x69, 0xF6]
]


def generate_mac_address():
    """ randomly generate a mac address, the first three bytes identify a manufacturer"""
    prefix = manufacturer_mac_address[random.randint(0, len(manufacturer_mac_address)-1)]
    mac = prefix+\
    [random.randint(0x00, 0xff),
     random.randint(0x00, 0xff),
     random.randint(0x00, 0xff) ]
    return ':'.join(map(lambda x: "%02x" % x, mac))
    

def change_mac_address(mac):
    """change mac address permanently by modifying the configuring file of the network interface and restart it
       available for Ubuntu and Centos now, the last line of the configuring file should be mac address
    
    Args:
        mac (str): XX:XX:XX:XX:XX:XX
    """
    text, command, interface_file = '', '', ''
    # ubuntu 
    ubuntu_interface_file = '/etc/network/interfaces'
    if os.path.isfile(ubuntu_interface_file):
        text = 'hwaddress ether %s\n'%mac
        command = '/etc/init.d/networking restart'
        interface_file = ubuntu_interface_file
    else :
        # centos 
        popen = subprocess.Popen(['ifconfig'], stdout = subprocess.PIPE, stderr = subprocess.PIPE)
        out, err = popen.communicate()
        text = out.split('\n')[0]
        if err: print err
        interface = re.match(r'(\w+)', text).group(0)
        centos_interface_file = '/etc/sysconfig/network-scripts/ifcfg-%s'%interface
        if os.path.isfile(centos_interface_file):
            text = 'MACADDR=%s\n'%mac
            command = '/etc/init.d/network restart'
            interface_file = centos_interface_file
        else:
            print 'network interface not found'
            sys.exit(0)
    # change mac address
    try:
        with open(interface_file) as f:
            lines = f.readlines()
        with open(interface_file, 'w') as wf:
            for line in lines:
                if line.lower().startswith(('hwaddr', 'macaddr')):
                    continue
                wf.write(line)
            wf.write(text)
        os.system(command)
        print 'successfully change mac address to %s'%mac
    except Exception, e:
        print 'Error while changing mac address \n %s'%(e.message)
        sys.exit(0)


def change_mac_address_with_ifconfig(mac):
    """modify mac address for linux with ifconfig command(not work)

    Args:
        mac(str): XX:XX:XX:XX:XX:XX
    """
    try:
        command = 'ifconfig'
        popen = subprocess.Popen(command.split(), stdout = subprocess.PIPE, stderr = subprocess.PIPE)
        out, err = popen.communicate()
        text = out.split('\n')[0]
        if err: print err
        interface = re.match(r'(\w+)', text).group(0)
        command = 'ifconfig %s hw ether %s'%(interface, mac)
        os.system(command)
        print 'change mac address to %s successfully'%mac
    except Exception, e:
        print 'Error while changing mac address \n %s'%(e.message)
        sys.exit(0)



if __name__ == '__main__':
    change_mac_address(generate_mac_address())